substitutions:
  device_name: "esp32c3-hpm-v1"
  led_brightness: 50%

esphome:
  name: esp32c3-hpm-v1
#  name_add_mac_suffix: True
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    priority: 600
    then:
      - light.turn_on: 
          id: led1
          brightness: $led_brightness
          red: !lambda "return id(color_r);"
          green: !lambda "return id(color_g);"
          blue: !lambda "return id(color_b);"
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32C3-Hpm-V1 Fallback Hotspot"
    password: "4wgndPrnVSRo"

captive_portal:


globals:
  - id: color_r
    type: int
    restore_value: no
    initial_value: "0"
  - id: color_g
    type: int
    restore_value: no
    initial_value: "0"
  - id: color_b
    type: int
    restore_value: no
    initial_value: "0"

external_components:
  - source: github://jonhdimagio/esphome@ld2410-nocore
    components: [ld2410_ts]

i2c:
  scl: 0
  sda: 1
  scan: true

uart:
  id: uart1
  tx_pin: 21
  rx_pin: 20
  baud_rate: 256000 
  parity: NONE
  stop_bits: 1
  
sensor:
  - platform: bh1750
    name: "$device_name BH1750 Illuminance"
    address: 0x23
    update_interval: 60s

  - platform: aht10
    temperature:
      name: "$device_name Temperature"
    humidity:
      name: "$device_name Humidity"
    update_interval: 60s

  - platform: ld2410_ts
    moving_distance:
      name : "$device_name Moving distance (cm)"
    still_distance:
      name: "$device_name Still Distance (cm)"
    moving_energy:
       name: "$device_name Move Energy"
    still_energy:
      name: "$device_name Still Energy"
    detection_distance:
      name: "$device_name Distance Detection"
    

binary_sensor:
  - platform: gpio
    pin:
      number: 6
      mode:
        input: true
      inverted: false
    name: "$device_name Motion 1"
    device_class: motion
  
  - platform: gpio
    pin: 5
    name: "$device_name Tamper"

  - platform: ld2410_ts
    has_target:
      name : "$device_name presence"
      id: presence
      on_press:
        then:
        - globals.set:
            id: color_g
            value: '1'  
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"
        - switch.turn_on: ssr1
      on_release:
        then:
        - globals.set:
            id: color_g
            value: '0'
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"
        - switch.turn_off: ssr1
      
    has_still_target:
      name: "$device_name still"
      id: still
      on_press:
        then:
        - globals.set:
            id: color_b
            value: '1'  
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"
      on_release:
        then:
        - globals.set:
            id: color_b
            value: '0'
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"

    has_moving_target:
      name: "$device_name movement"
      id: movement
      on_press:
        then:
        - globals.set:
            id: color_r
            value: '1'  
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"
      on_release:
        then:
        - globals.set:
            id: color_r
            value: '0'
        - light.addressable_set:
            id: led1
            range_from: 0
            range_to: 1
            color_brightness: $led_brightness
            red: !lambda "return id(color_r);"
            green: !lambda "return id(color_g);"
            blue: !lambda "return id(color_b);"

    connected:
      name : "$device_name connected"
      device_class: running

switch:
  - platform: gpio
    pin: 10
    name: "$device_name 2EOL Output"
    id: ssr1


ld2410_ts:
  id: my_ld2410
  engineeringmode: false
  settings: false
  none_duration: 5
  max_move_distance : 8
  max_still_distance: 8
  g0_move_threshold: 50           #0,00
  g0_still_threshold: 0 
  g1_move_threshold: 50           #0,75
  g1_still_threshold: 0
  g2_move_threshold: 40           #1,50
  g2_still_threshold: 40
  g3_move_threshold: 30           #2,25
  g3_still_threshold: 40
  g4_move_threshold: 20           #3,00
  g4_still_threshold: 30
  g5_move_threshold: 15           #3,75
  g5_still_threshold: 30
  g6_move_threshold: 15           #4,50
  g6_still_threshold: 20
  g7_move_threshold: 15           #5,75
  g7_still_threshold: 20
  g8_move_threshold: 15           #6,0
  g8_still_threshold: 20
  info:
    name: $device_name info

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    id: led1
    pin: 7
    num_leds: 1    

esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true